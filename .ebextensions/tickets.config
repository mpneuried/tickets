{
  "sources": {
    "/home/ec2-user": "http://download.redis.io/releases/redis-2.8.9.tar.gz"
  }, 
  "commands": {
    "redis_config_003": {
      "command": "sed -i -e \"s/# maxmemory-policy volatile-lru/maxmemory-policy allkeys-lru/\" redis.conf", 
      "cwd": "/home/ec2-user/redis-2.8.9"
    }, 
    "redis_config_002": {
      "command": "sed -i -e \"s/# maxmemory <bytes>/maxmemory 500MB/\" redis.conf", 
      "cwd": "/home/ec2-user/redis-2.8.9"
    }, 
    "redis_config_001": {
      "command": "sed -i -e \"s/daemonize no/daemonize yes/\" redis.conf", 
      "cwd": "/home/ec2-user/redis-2.8.9"
    }, 
    "redis_server": {
      "command": "src/redis-server redis.conf", 
      "cwd": "/home/ec2-user/redis-2.8.9"
    }, 
    "redis_build": {
      "command": "make", 
      "cwd": "/home/ec2-user/redis-2.8.9"
    }
  }, 
  "container_commands": {
    "renameconfig": {
        "command":"mv config_aws_eb.json config.json"
      }
  },
  "packages": {
    "yum": {
      "make": [], 
      "gcc-c++": []
    }
  }, 
  "option_settings": [
    {
      "option_name": "NodeCommand", 
      "namespace": "aws:elasticbeanstalk:container:nodejs", 
      "value": "node ./index.js"
    }, 
    {
      "option_name": "NodeVersion", 
      "namespace": "aws:elasticbeanstalk:container:nodejs", 
      "value": "0.10.26"
    }, 
    {
      "option_name": "GzipCompression", 
      "namespace": "aws:elasticbeanstalk:container:nodejs", 
      "value": true
    }, 
    {
      "option_name": "ProxyServer", 
      "namespace": "aws:elasticbeanstalk:container:nodejs", 
      "value": "nginx"
    }, 
    {
      "option_name": "LogPublicationControl", 
      "namespace": "aws:elasticbeanstalk:hostmanager", 
      "value": true
    }, 
    {
      "option_name": "MinSize", 
      "namespace": "aws:autoscaling:asg", 
      "value": 1
    }, 
    {
      "option_name": "MaxSize", 
      "namespace": "aws:autoscaling:asg", 
      "value": 2
    }, 
    {
      "option_name": "EC2KeyName", 
      "namespace": "aws:autoscaling:launchconfiguration", 
      "value": "mpneuried"
    }, 
    {
      "option_name": "InstanceType", 
      "namespace": "aws:autoscaling:launchconfiguration", 
      "value": "t1.micro"
    }, 
    {
      "option_name": "Application Healthcheck URL", 
      "namespace": "aws:elasticbeanstalk:application", 
      "value": "/login"
    }, 
    {
      "option_name": "EnvironmentType", 
      "namespace": "aws:elasticbeanstalk:environment", 
      "value": "LoadBalanced"
    }, 
    {
      "option_name": "Automatically Terminate Unhealthy Instances", 
      "namespace": "aws:elasticbeanstalk:monitoring", 
      "value": false
    }, 
    {
      "option_name": "Stickiness Policy", 
      "namespace": "aws:elb:policies", 
      "value": true
    }, 
    {
      "option_name": "Stickiness Cookie Expiration", 
      "namespace": "aws:elb:policies", 
      "value": 0
    }
  ]
}